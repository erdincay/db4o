<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Querying|Native Queries" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Native Query Examples</title>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#basics/querying/native_queries/native_query_examples.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../querying.htm">Querying</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../native_queries.htm">Native Queries</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Equality</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>Native Query Examples</h1>
        <p MadCap:conditions="Primary..NET"><strong style="color:red">Since <a href="../linq.htm">.NET 3.5 LINQ</a> is the way to go in order to query db4o. LINQ provides a extremely powerful query language. We strongly recommend <a href="../linq.htm">using LINQ</a> instead of native queries.</strong>
        </p>
        <p>Here's a collection of native query examples. These queries assume that there's a Pilot class with a name and age and a Car class with a pilot and name.</p>
        <p MadCap:conditions="Primary..NET">Note that for .NET 3.5 or newer we recommend to use <a href="../linq.htm">LINQ</a> instead of native queries.</p>
        <h2><a name="Equality"></a>Equality</h2>
        <p>This query shows you how compare a <span class="Primarygetter/setter">property</span> for equality. In this example we compare the name of a person.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IList&lt;Pilot&gt; result = container.Query(
    <span style="color:Blue;">delegate</span>(Pilot pilot) { <span style="color:Blue;">return</span> pilot.Name == <span style="color:#A31515;">"John"</span>; });</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Check for equality of the name
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IList(Of Pilot) = container.Query(Of Pilot)(<span style="color:Blue;">AddressOf</span> QueryJohns)</pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Check for equality of the name
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Shared</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> QueryJohns(<span style="color:Blue;">ByVal</span> pilot <span style="color:Blue;">As</span> Pilot)
    <span style="color:Blue;">Return</span> pilot.Name = <span style="color:#A31515;">"John"</span>
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Query for John
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="Comparison"></a>Comparison</h2>
        <p>You can compare values with the usual comparison operators.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IList&lt;Pilot&gt; result = container.Query(
    <span style="color:Blue;">delegate</span>(Pilot pilot) { <span style="color:Blue;">return</span> pilot.Age &lt; 18; });</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Compare values to each other
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IList(Of Pilot) = container.Query(Of Pilot)(<span style="color:Blue;">AddressOf</span> QueryAdults)</pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Compare values to each other
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Shared</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> QueryAdults(<span style="color:Blue;">ByVal</span> pilot <span style="color:Blue;">As</span> Pilot)
    <span style="color:Blue;">Return</span> pilot.Age &lt; 18
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Query for adults
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="ValueRange"></a>Query For Value Range</h2>
        <p>Of course you can combine different comparisons. For example you can combine the greater and smaller than operators to check for a range of values.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IList&lt;Pilot&gt; result = container.Query(
    <span style="color:Blue;">delegate</span>(Pilot pilot) { <span style="color:Blue;">return</span> pilot.Age &gt; 18 &amp;&amp; pilot.Age &lt; 30; });</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Query for a particular rage of values
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IList(Of Pilot) = container.Query(Of Pilot)(<span style="color:Blue;">AddressOf</span> QueryRange)</pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Query for a particular rage of values
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Shared</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> QueryRange(<span style="color:Blue;">ByVal</span> pilot <span style="color:Blue;">As</span> Pilot)
    <span style="color:Blue;">Return</span> pilot.Age &gt; 18 <span style="color:Blue;">AndAlso</span> pilot.Age &lt; 30
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Query for range
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="LogicalOperators"></a>Combine Check With Logical Operators</h2>
        <p>Of course you can combine a arbitrary set of conditions with logical operators.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IList&lt;Pilot&gt; result = container.Query(
    <span style="color:Blue;">delegate</span>(Pilot pilot)
        {
            <span style="color:Blue;">return</span> (pilot.Age &gt; 18 &amp;&amp; pilot.Age &lt; 30)
                   || pilot.Name == <span style="color:#A31515;">"John"</span>;
        });</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Combine different comparisons with the logical operators
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IList(Of Pilot) = container.Query(Of Pilot)(<span style="color:Blue;">AddressOf</span> CombineCriterias)</pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Combine different comparisons with the logical operators
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Shared</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> CombineCriterias(<span style="color:Blue;">ByVal</span> pilot <span style="color:Blue;">As</span> Pilot)
    <span style="color:Blue;">Return</span> (pilot.Age &gt; 18 <span style="color:Blue;">AndAlso</span> pilot.Age &lt; 30) <span style="color:Blue;">OrElse</span> pilot.Name = <span style="color:#A31515;">"John"</span>
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Combine criterias
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="SeperateQueryUnit"></a>Query In Separate<span MadCap:conditions="Primary..NET"> Method</span></h2>
        <p>You can implement your query in a separate<span MadCap:conditions="Primary..NET"> method</span> and then just us it where you need it. This is especially useful when you reuse the same query multiple times. Or you want to give your query a clear name for documentation purposes.</p>
        <p>First write your <span MadCap:conditions="Primary..NET"> method</span>:</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">static</span> <![CDATA[ ]]><span style="color:Blue;">bool</span> AllJohns(Pilot pilot)
{
    <span style="color:Blue;">return</span> pilot.Name == <span style="color:#A31515;">"John"</span>;
}</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Query as method
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Shared</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> AllJohns(<span style="color:Blue;">ByVal</span> pilot <span style="color:Blue;">As</span> Pilot) <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">Boolean</span>
    <span style="color:Blue;">Return</span> pilot.Name = <span style="color:#A31515;">"John"</span>
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Query as method
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>And then use it:</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IList&lt;Pilot&gt; result = container.Query(<span style="color:Blue;">new</span> Predicate&lt;Pilot&gt;(AllJohns));</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Use the predefined query
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IList(Of Pilot) = container.Query(Of Pilot)(<span style="color:Blue;">AddressOf</span> AllJohns)</pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Use the predefined query
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="ArbitraryCode"></a>Arbitrary Code</h2>
        <p>In principal your query can contain any code and can do the most complex comparisons. However in practice the are limitations. The simple queries are <a href="native_query_optimization.htm">optimized and translated to SODA-queries</a>. This is not possible for complex queries. If the query cannot be optimized, db4o will instantiate all objects and pass it to your query-object. This is a order of magnitude slower than a optimized native query and only feasible for smaller data sets.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IList&lt;<span style="color:Blue;">int</span>&gt; allowedAges = Array.AsReadOnly(<span style="color:Blue;">new</span> <![CDATA[ ]]><span style="color:Blue;">int</span>[] {18, 20, 35});
IList&lt;Pilot&gt; result = container.Query(
    <span style="color:Blue;">delegate</span>(Pilot pilot)
        {
            <span style="color:Blue;">return</span> allowedAges.Contains(pilot.Age) ||
                   pilot.Name.ToLowerInvariant() == <span style="color:#A31515;">"John"</span>;
        });</pre>
            <div class="codesnippet-meta">NativeQueryExamples.cs: Arbitrary code
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IList(Of Pilot) = container.Query(Of Pilot)(<span style="color:Blue;">AddressOf</span> QueryWithAnyCode)</pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Arbitrary code
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Shared</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> QueryWithAnyCode(<span style="color:Blue;">ByVal</span> pilot <span style="color:Blue;">As</span> Pilot)
    <span style="color:Blue;">Dim</span> allowedAges <span style="color:Blue;">As</span> IList(Of <span style="color:Blue;">Integer</span>) = Array.AsReadOnly(<span style="color:Blue;">New</span> <![CDATA[ ]]><span style="color:Blue;">Integer</span>() {18, 20, 35})
    <span style="color:Blue;">Return</span> allowedAges.Contains(Pilot.Age) _
                <span style="color:Blue;">OrElse</span> Pilot.Name.ToLowerInvariant() = <span style="color:#A31515;">"John"</span>
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">NativeQueryExamples.vb: Query with arbitrary code
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>&#160;</p>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>