<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Advanced Features|Callbacks|Possible Usecases" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Autoincrement</title>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../SkinSupport/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#advanced_topics/callbacks/possible_usecases/autoincrement.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../advanced_topics.htm">Advanced Features</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../callbacks.htm">Callbacks</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../possible_usecases.htm">Possible Usecases</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Autoincrement</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor54"></a>Autoincrement</h1>
        <p>db4o does not deliver a field auto increment feature, which
is common in <span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">RDBMS<img style="border: none;margin-left: 5px;" src="../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Relational Database Management System</span></span>. Normally you don't need any additional ids, since db4o manages objects by object-identity. However cases where you have <a href="../../../platform_specific_issues/disconnected_objects.htm">disconnected objects</a>, you need additional ids. One of then possibilities it to use auto incremented ids.</p>
        <p> If your application logic requires this feature you can
implement it using external callbacks. One of the possible solutions is
presented below. Note that this example only works in embedded-mode.</p>
        <p>This example assumes that all object which need an auto incremented id are subclasses of the IDHolder class. This class contains the auto-incremented id.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span>  <![CDATA[ ]]><span style="color:Blue;">int</span> id;

<span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">int</span> Id
{
    <span style="color:Blue;">get</span> { <span style="color:Blue;">return</span> id; }
    <span style="color:Blue;">set</span> { id = value; }
}</pre>
            <div class="codesnippet-meta">IDHolder.cs: id holder
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span> m_id <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span>

<span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Property</span> Id() <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span>
    <span style="color:Blue;">Get</span>
        <span style="color:Blue;">Return</span> m_id
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Get</span>
    <span style="color:Blue;">Set</span>(<span style="color:Blue;">ByVal</span> value <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span>)
        m_id = value
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Set</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Property</span></pre>
            <div class="codesnippet-meta">IDHolder.vb: id holder
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>First create a class which keeps the state of the auto-increment numbers. For example a map which keeps the latest auto incremented id for each class.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span>  <![CDATA[ ]]><span style="color:Blue;">class</span> PersistedAutoIncrements
{
    <span style="color:Blue;">private</span>  <![CDATA[ ]]><span style="color:Blue;">readonly</span> IDictionary&lt;Type, <span style="color:Blue;">int</span>&gt; currentHighestIds = <span style="color:Blue;">new</span> Dictionary&lt;Type, <span style="color:Blue;">int</span>&gt;();

    <span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">int</span> NextNumber(Type forClass)
    {
        <span style="color:Blue;">int</span> number;
        <span style="color:Blue;">if</span> (!currentHighestIds.TryGetValue(forClass, <span style="color:Blue;">out</span> number))
        {
            number = 0;
        }
        number += 1;
        currentHighestIds[forClass] = number;
        <span style="color:Blue;">return</span> number;
    }
}</pre>
            <div class="codesnippet-meta">AutoIncrement.cs: persistent auto increment
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> PersistedAutoIncrements
    <span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">ReadOnly</span> currentHighestIds <span style="color:Blue;">As</span> IDictionary(Of Type, <span style="color:Blue;">Integer</span>) _
                        = <span style="color:Blue;">New</span> Dictionary(Of Type, <span style="color:Blue;">Integer</span>)()

    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span> NextNumber(<span style="color:Blue;">ByVal</span> forClass <span style="color:Blue;">As</span> Type) <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span>
        <span style="color:Blue;">Dim</span> number <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span>
        <span style="color:Blue;">If</span>  <![CDATA[ ]]><span style="color:Blue;">Not</span> currentHighestIds.TryGetValue(forClass, number) <span style="color:Blue;">Then</span>
            number = 0
        <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">If</span>
        number += 1
        currentHighestIds(forClass) = number
        <span style="color:Blue;">Return</span> number
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">AutoIncrement.vb: persistent auto increment
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Then create two methods, which are called later. One which returns the next auto-incremented id for a certain class. Another which stores the current state of the auto-increments.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">int</span> GetNextID(Type forClass)
{
    <span style="color:Blue;">lock</span> (dataLock)
    {
        PersistedAutoIncrements incrementState = EnsureLoadedIncrements();
        <span style="color:Blue;">return</span> incrementState.NextNumber(forClass);
    }
}

<span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">void</span> StoreState()
{
    <span style="color:Blue;">lock</span> (dataLock)
    {
        <span style="color:Blue;">if</span> (<span style="color:Blue;">null</span> != state)
        {
            container.Ext().Store(state,2);
        }
    }
}</pre>
            <div class="codesnippet-meta">AutoIncrement.cs: getting the next id and storing state
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span> GetNextID(<span style="color:Blue;">ByVal</span> forClass <span style="color:Blue;">As</span> Type) <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span>
    <span style="color:Blue;">SyncLock</span> dataLock
        <span style="color:Blue;">Dim</span> incrementState <span style="color:Blue;">As</span> PersistedAutoIncrements = EnsureLoadedIncrements()
        <span style="color:Blue;">Return</span> incrementState.NextNumber(forClass)
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">SyncLock</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span>

<span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span> StoreState()
    <span style="color:Blue;">SyncLock</span> dataLock
        <span style="color:Blue;">If</span> state <span style="color:Blue;">IsNot</span>  <![CDATA[ ]]><span style="color:Blue;">Nothing</span>  <![CDATA[ ]]><span style="color:Blue;">Then</span>
            container.Ext().Store(state, 2)
        <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">If</span>
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">SyncLock</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span></pre>
            <div class="codesnippet-meta">AutoIncrement.vb: getting the next id and storing state
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>The last part is to ensure that the existing auto-increments are loaded from the database. Or if not existing a new instance is created.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span> PersistedAutoIncrements EnsureLoadedIncrements()
{
    <span style="color:Blue;">if</span> (<span style="color:Blue;">null</span> == state)
    {
        state = LoadOrCreateState();
    }
    <span style="color:Blue;">return</span> state;
}

<span style="color:Blue;">private</span> PersistedAutoIncrements LoadOrCreateState()
{
    IList&lt;PersistedAutoIncrements&gt; existingState = container.Query&lt;PersistedAutoIncrements&gt;();
    <span style="color:Blue;">if</span> (0 == existingState.Count)
    {
        <span style="color:Blue;">return</span>  <![CDATA[ ]]><span style="color:Blue;">new</span> PersistedAutoIncrements();
    }
    <span style="color:Blue;">else</span>  <![CDATA[ ]]><span style="color:Blue;">if</span> (1 == existingState.Count)
    {
        <span style="color:Blue;">return</span> existingState[0];
    }
    <span style="color:Blue;">else</span>
    {
        <span style="color:Blue;">throw</span>  <![CDATA[ ]]><span style="color:Blue;">new</span> InvalidOperationException(<span style="color:#A31515;">"Cannot have more than one state stored in database"</span>);
    }
}</pre>
            <div class="codesnippet-meta">AutoIncrement.cs: load the state from the database
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span> EnsureLoadedIncrements() <span style="color:Blue;">As</span> PersistedAutoIncrements
    <span style="color:Blue;">If</span> state <span style="color:Blue;">Is</span>  <![CDATA[ ]]><span style="color:Blue;">Nothing</span>  <![CDATA[ ]]><span style="color:Blue;">Then</span>
        state = LoadOrCreateState()
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">If</span>
    <span style="color:Blue;">Return</span> state
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span>

<span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span> LoadOrCreateState() <span style="color:Blue;">As</span> PersistedAutoIncrements
    <span style="color:Blue;">Dim</span> existingState <span style="color:Blue;">As</span> IList(Of PersistedAutoIncrements) = container.Query(Of PersistedAutoIncrements)()
    <span style="color:Blue;">If</span> 0 = existingState.<span style="color:Blue;">Count</span>  <![CDATA[ ]]><span style="color:Blue;">Then</span>
        <span style="color:Blue;">Return</span>  <![CDATA[ ]]><span style="color:Blue;">New</span> PersistedAutoIncrements()
    <span style="color:Blue;">ElseIf</span> 1 = existingState.<span style="color:Blue;">Count</span>  <![CDATA[ ]]><span style="color:Blue;">Then</span>
        <span style="color:Blue;">Return</span> existingState(0)
    <span style="color:Blue;">Else</span>
        <span style="color:Blue;">Throw</span>  <![CDATA[ ]]><span style="color:Blue;">New</span> InvalidOperationException(<span style="color:#A31515;">"Cannot have more than one state stored in database"</span>)
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">If</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span></pre>
            <div class="codesnippet-meta">AutoIncrement.vb: load the state from the database
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Now it's time to use the callbacks. Every time when a new object is created, assign a new id. For this the creating-event is perfect. When commiting  also make the auto increment-state persistent, to ensure that no id is used twice.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">AutoIncrement increment = <span style="color:Blue;">new</span> AutoIncrement(container);
IEventRegistry eventRegistry = EventRegistryFactory.ForObjectContainer(container);

eventRegistry.Creating+=
    <span style="color:Blue;">delegate</span>(<span style="color:Blue;">object</span> sender, CancellableObjectEventArgs args)
    {
        <span style="color:Blue;">if</span> (args.Object <span style="color:Blue;">is</span> IDHolder)
        {
            IDHolder idHolder = (IDHolder)args.Object;
            idHolder.Id = increment.GetNextID(idHolder.GetType());
        }    
    };
eventRegistry.Committing +=
    <span style="color:Blue;">delegate</span>(<span style="color:Blue;">object</span> sender, CommitEventArgs args)
        {
            increment.StoreState();    
        };</pre>
            <div class="codesnippet-meta">AutoIncrementExample.cs: use events to assign the ids
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> increment <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">New</span> AutoIncrement(container)
<span style="color:Blue;">Dim</span> eventRegistry <span style="color:Blue;">As</span> IEventRegistry = EventRegistryFactory.ForObjectContainer(container)

<span style="color:Blue;">AddHandler</span> eventRegistry.Creating, <span style="color:Blue;">AddressOf</span> increment.HandleCreating
<span style="color:Blue;">AddHandler</span> eventRegistry.Committing, <span style="color:Blue;">AddressOf</span> increment.HandleCommiting</pre>
            <div class="codesnippet-meta">AutoIncrementExample.vb: use events to assign the ids
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Last, don't forget to index the id-field. Otherwise looks-ups will be slow.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">configuration.Common.ObjectClass(<span style="color:Blue;">typeof</span> (IDHolder)).ObjectField(<span style="color:#A31515;">"id"</span>).Indexed(<span style="color:Blue;">true</span>);</pre>
            <div class="codesnippet-meta">AutoIncrementExample.cs: index the id-field
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve">configuration.Common.ObjectClass(<span style="color:Blue;">GetType</span>(IDHolder)).ObjectField(<span style="color:#A31515;">"id"</span>).Indexed(<span style="color:Blue;">True</span>)</pre>
            <div class="codesnippet-meta">AutoIncrementExample.vb: index the id-field
			<div class="codedownload"><a href="../../../CodeExamples/disconnectedobj/idexamples/Example-disconnectedobj-idexamples-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>