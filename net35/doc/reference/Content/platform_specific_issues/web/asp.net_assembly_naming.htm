<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Platform Specific Issues|Web Environment" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>ASP.NET Assembly Naming</title>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#platform_specific_issues/web/asp.net_assembly_naming.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../platform_specific_issues.htm">Platform Specific Issues</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../web_environment.htm">Web Environment</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">ASP.NET Assembly Naming</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>ASP.NET Assembly Naming</h1>
        <p>When you code directly in <span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../asp.net.htm">ASP.NET<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> pages you should take into consideration that the assembly names are generated automatically on each build. db4o distinguish persisted classes by name, namespace and assembly. So after the assembly name has changed, you won't be able to access classes saved with the previous version of the assembly.</p>
        <p>There are several workarounds:</p>
        <ul>
            <li value="1">You can create a separate class library keeping db4o logic and persistent classes. This can also help if you need to access fully trusted db4o library from partially trusted ASP application.</li>
            <li value="2">You can use db4o <a href="../../configuration/common/alias.htm">aliasing API</a> to redirect saved classes to the new assembly name. The following method should be called before opening database file to make all the classes within the namespace available after assembly name change:</li>
        </ul>
        <p>
            <div class="codesnippet" MadCap:conditions="Primary.c#">
                <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">var</span> config = Db4oEmbedded.NewConfiguration();
config.Common.AddAlias(<span style="color:Blue;">new</span> AspAssemblyNamingFix());</pre>
                <div class="codesnippet-meta">DynamicAssembliesIssue.cs: Fix ASP.NET assembly names
			<div class="codedownload"><a href="../../CodeExamples/platform/asp/Example-platform-asp-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
            <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
                <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> config = Db4oEmbedded.NewConfiguration()
config.Common.AddAlias(<span style="color:Blue;">New</span> AspAssemblyNamingFix())</pre>
                <div class="codesnippet-meta">DynamicAssembliesIssue.vb: Fix ASP.NET assembly names
			<div class="codedownload"><a href="../../CodeExamples/platform/asp/Example-platform-Asp-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
        </p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">class</span> AspAssemblyNamingFix : IAlias
{
    <span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">const</span> <![CDATA[ ]]><span style="color:Blue;">string</span> FixedName = <span style="color:#A31515;">"AspFixedAssemblyName"</span>;
    <span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">readonly</span> <![CDATA[ ]]><span style="color:Blue;">string</span> DynamicName 
        = <span style="color:Blue;">typeof</span>(AspAssemblyNamingFix).Assembly.GetName().Name;

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">string</span> ResolveRuntimeName(<span style="color:Blue;">string</span> runtimeTypeName)
    {
        <span style="color:Blue;">return</span> runtimeTypeName.Replace(DynamicName, FixedName);
    }

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">string</span> ResolveStoredName(<span style="color:Blue;">string</span> storedTypeName)
    {
        <span style="color:Blue;">return</span> storedTypeName.Replace(FixedName, DynamicName);
    }
}</pre>
            <div class="codesnippet-meta">DynamicAssembliesIssue.cs: Replace the dynamic assembly name with a fixed one
			<div class="codedownload"><a href="../../CodeExamples/platform/asp/Example-platform-asp-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Class</span> AspAssemblyNamingFix
    <span style="color:Blue;">Implements</span> IAlias
    <span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">Const</span> FixedName <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">String</span> = <span style="color:#A31515;">"AspFixedAssemblyName"</span>
    <span style="color:Blue;">Private</span> <![CDATA[ ]]><span style="color:Blue;">ReadOnly</span> DynamicName <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">String</span> _
                = <span style="color:Blue;">GetType</span>(AspAssemblyNamingFix).<span style="color:Blue;">Assembly</span>.GetName().Name

    <span style="color:Blue;">Public</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> ResolveRuntimeName(runtimeTypeName <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">String</span>) <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">String</span> _
        <span style="color:Blue;">Implements</span> IAlias.ResolveRuntimeName
        <span style="color:Blue;">Return</span> runtimeTypeName.Replace(DynamicName, FixedName)
    <span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span>

    <span style="color:Blue;">Public</span> <![CDATA[ ]]><span style="color:Blue;">Function</span> ResolveStoredName(storedTypeName <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">String</span>) <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">String</span> _
        <span style="color:Blue;">Implements</span> IAlias.ResolveStoredName
        <span style="color:Blue;">Return</span> storedTypeName.Replace(FixedName, DynamicName)
    <span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Function</span>
<span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">DynamicAssembliesIssue.vb: Replace the dynamic assembly name with a fixed one
			<div class="codedownload"><a href="../../CodeExamples/platform/asp/Example-platform-Asp-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>