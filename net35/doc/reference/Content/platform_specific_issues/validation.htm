<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Platform Specific Issues" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Validation</title>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#platform_specific_issues/validation.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../platform_specific_issues.htm">Platform Specific Issues</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Validation</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor117"></a>Validation</h1>
        <p>By default db4o doesn't support any validation and integrity checks <a href="../advanced_topics/unique_constraints.htm">except unique field values</a>.
		
		 <span>However you can use <a href="http://msdn.microsoft.com/en-us/library/cc490428.aspx" target="_parent">.NET data annotations</a> to validate objects. The .NET data annotations provide attributes for validating objects.</span><span>However you can use other libraries like <a href="http://www.hibernate.org/subprojects/validator.html" target="_parent">Hibernate-Validator</a> to validate objects. Download the library from the <a href="http://www.hibernate.org/subprojects/validator/download" target="_parent">official Hibernate site</a> and include into your project.</span>Objects can be validated when you store them in the database by <a href="../advanced_topics/callbacks.htm">using db4o events</a>.</p>
        <p>Add the <span class="PrimaryAnnotation">Attribute</span> to your classes which you want to validate:</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">class</span> Pilot
{
    <span style="color:Blue;">private</span>  <![CDATA[ ]]><span style="color:Blue;">string</span> name;

    [Required]
    <span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">string</span> Name
    {
        <span style="color:Blue;">get</span> { <span style="color:Blue;">return</span> name; }
        <span style="color:Blue;">set</span> { name = value; }
    }
}</pre>
            <div class="codesnippet-meta">DataValidation.cs: Validation attributes
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Class</span> Pilot
    <span style="color:Blue;">Private</span> m_name <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">String</span>

    &lt;Required()&gt; _
    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Property</span> Name() <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">String</span>
        <span style="color:Blue;">Get</span>
            <span style="color:Blue;">Return</span> m_name
        <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Get</span>
        <span style="color:Blue;">Set</span>(<span style="color:Blue;">ByVal</span> value <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">String</span>)
            m_name = value
        <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Set</span>
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Property</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">DataValidation.vb: Validation attributes
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Now we can write a validation method and register it to the db4o events:</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span>  <![CDATA[ ]]><span style="color:Blue;">static</span>  <![CDATA[ ]]><span style="color:Blue;">void</span> ValidateObject(<span style="color:Blue;">object</span> sender,
                                   CancellableObjectEventArgs eventInfo)
{
    ValidationContext context = <span style="color:Blue;">new</span> ValidationContext(eventInfo.Object, <span style="color:Blue;">null</span>, <span style="color:Blue;">null</span>);
    <span style="color:Green;">// This throws when the object isn't valid.</span>
    Validator.ValidateObject(eventInfo.Object, context, <span style="color:Blue;">true</span>);
}</pre>
            <div class="codesnippet-meta">DataValidation.cs: Validation support
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Shared</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span> ValidateObject(<span style="color:Blue;">ByVal</span> sender <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Object</span>, <span style="color:Blue;">ByVal</span> eventInfo <span style="color:Blue;">As</span> CancellableObjectEventArgs)
    <span style="color:Blue;">Dim</span> context <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">New</span> ValidationContext(eventInfo.Object, <span style="color:Blue;">Nothing</span>, <span style="color:Blue;">Nothing</span>)
    <span style="color:Green;">'This throws when the object isn't valid.</span>
    Validator.ValidateObject(eventInfo.Object, context, <span style="color:Blue;">True</span>)
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span></pre>
            <div class="codesnippet-meta">DataValidation.vb: Validation support
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IEventRegistry events = EventRegistryFactory.ForObjectContainer(container);
events.Creating += ValidateObject;
events.Updating += ValidateObject;</pre>
            <div class="codesnippet-meta">DataValidation.cs: Register validation for the create and update event
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> events <span style="color:Blue;">As</span> IEventRegistry = EventRegistryFactory.ForObjectContainer(container)
<span style="color:Blue;">AddHandler</span> events.Creating, <span style="color:Blue;">AddressOf</span> ValidateObject
<span style="color:Blue;">AddHandler</span> events.Updating, <span style="color:Blue;">AddressOf</span> ValidateObject</pre>
            <div class="codesnippet-meta">DataValidation.vb: Register validation for the create and update event
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>After that you can store and update objects. In case a object violates its validation rules an exception is thrown. That exception will contain information about the violations.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">var</span> pilot = <span style="color:Blue;">new</span> Pilot {Name = <span style="color:#A31515;">"Joe"</span>};
container.Store(pilot);</pre>
            <div class="codesnippet-meta">DataValidation.cs: Storing a valid pilot
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> pilot = <span style="color:Blue;">New</span> Pilot()
pilot.Name = <span style="color:#A31515;">"Joe"</span>
container.Store(pilot)</pre>
            <div class="codesnippet-meta">DataValidation.vb: Storing a valid pilot
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">var</span> otherPilot = <span style="color:Blue;">new</span> Pilot {Name = <span style="color:#A31515;">""</span>};
<span style="color:Blue;">try</span>
{
    container.Store(otherPilot);
}
<span style="color:Blue;">catch</span> (EventException e)
{
    ValidationException cause = (ValidationException) e.InnerException;
    Console.WriteLine(cause.ValidationResult.ErrorMessage);
}</pre>
            <div class="codesnippet-meta">DataValidation.cs: Storing a invalid pilot throws exception
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> otherPilot = <span style="color:Blue;">New</span> Pilot()
otherPilot.Name = <span style="color:#A31515;">""</span>
<span style="color:Blue;">Try</span>
    container.Store(otherPilot)
<span style="color:Blue;">Catch</span> e <span style="color:Blue;">As</span> EventException
    <span style="color:Blue;">Dim</span> cause <span style="color:Blue;">As</span> ValidationException = <span style="color:Blue;">DirectCast</span>(e.InnerException, ValidationException)
    Console.WriteLine(cause.ValidationResult.ErrorMessage)
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Try</span></pre>
            <div class="codesnippet-meta">DataValidation.vb: Storing a invalid pilot throws exception
			<div class="codedownload"><a href="../CodeExamples/validation/Example-Code-validation-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../Resources/Code/jquery.min.js">
        </script>
        <script src="../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>