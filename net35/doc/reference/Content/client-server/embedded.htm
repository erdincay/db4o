<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Client-Server" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Embedded Client Server</title>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#client-server/embedded.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../client-server.htm">Client-Server</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Embedded Clients</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor98"></a>Embedded Client Server</h1>
        <p>db4o supports embedded containers or session container. It's a separate object-container with its own transaction and own reference cache. <a href="../advanced_topics/session_containers.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Session Containers"</a></p>
        <p>Now if you're using the client-server mode for db4o, you also can create such sessions directly from the server. When you pass a 0 to the open server method, the server only supports embedded clients. With any other port you can connect with <a href="../client-server.htm">regular clients</a> and also create embedded clients.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">using</span> (IObjectServer server = Db4oClientServer.OpenServer(DatabaseFileName, 0))
{
    <span style="color:Green;">// open the db4o-embedded client. For example at the beginning for a web-request</span>
    <span style="color:Blue;">using</span> (IObjectContainer container = server.OpenClient())
    {
        <span style="color:Green;">// do the operations on the session-container</span>
        container.Store(<span style="color:Blue;">new</span> Person(<span style="color:#A31515;">"Joe"</span>));
    }
}</pre>
            <div class="codesnippet-meta">Db4oSessions.cs: Embedded client
			<div class="codedownload"><a href="../CodeExamples/container/sessions/Example-container-sessions-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Using</span> server <span style="color:Blue;">As</span> IObjectServer = Db4oClientServer.OpenServer(DatabaseFileName, 0)
    <span style="color:Green;">' open the db4o-embedded client. For example at the beginning for a web-request</span>
    <span style="color:Blue;">Using</span> container <span style="color:Blue;">As</span> IObjectContainer = server.OpenClient()
        <span style="color:Green;">' do the operations on the session-container</span>
        container.Store(<span style="color:Blue;">New</span> Person(<span style="color:#A31515;">"Joe"</span>))
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Using</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Using</span></pre>
            <div class="codesnippet-meta">Db4oSessions.vb: Embedded client
			<div class="codedownload"><a href="../CodeExamples/container/sessions/Example-container-sessions-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2>OpenSession On A Client</h2>
        <p>You might noted that the open-session is available on any object-container. Normally this creates a <a href="../advanced_topics/session_containers.htm">session-container</a> with its own transaction and reference cache. However on a db4o-client this is not true. There it only creates a container with new cache, but shares the transaction with the client. The only use case for this is to implement connection pooling.<a href="pooling.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Client-Container Pooling"</a></p>
        <p>&#160;</p>
        <script src="../Resources/Code/jquery.min.js">
        </script>
        <script src="../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>