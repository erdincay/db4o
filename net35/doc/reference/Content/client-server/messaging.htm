<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Client-Server" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Messaging</title>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#client-server/messaging.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../client-server.htm">Client-Server</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Messaging</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor102"></a><a name="kanchor103"></a>Messaging</h1>
        <p>In client/server it possible to send messages between a client and the server. Possible use cases could be:</p>
        <ul>
            <li value="1">Shutting down and restarting the server.</li>
            <li value="2">Triggering server backup.</li>
            <li value="3">Using a customized login strategy to restrict the number of allowed client connections.</li>
            <li value="4">Running special code on the server. For example batch updates.</li>
        </ul>
        <h2>Sending and Receiving Messages</h2>
        <p>First you need to decide on a class that you want to use as the message. Any object that is storable in db4o can be used as a message. Of course you use multiple classes for representing different messages. Let's create a dedicated class.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">class</span> HelloMessage
{
    <span style="color:Blue;">private</span>  <![CDATA[ ]]><span style="color:Blue;">readonly</span>  <![CDATA[ ]]><span style="color:Blue;">string</span> message;

    <span style="color:Blue;">public</span> HelloMessage(<span style="color:Blue;">string</span> message)
    {
        <span style="color:Blue;">this</span>.message = message;
    }

    <span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">override</span>  <![CDATA[ ]]><span style="color:Blue;">string</span> ToString()
    {
        <span style="color:Blue;">return</span> message;
    }
}</pre>
            <div class="codesnippet-meta">MessagingExample.cs: The message class
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> HelloMessage
    <span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">ReadOnly</span> message <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">String</span>

    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span>  <![CDATA[ ]]><span style="color:Blue;">New</span>(<span style="color:Blue;">ByVal</span> message <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">String</span>)
        <span style="color:Blue;">Me</span>.message = message
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span>

    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Overrides</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span> ToString() <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">String</span>
        <span style="color:Blue;">Return</span> message
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">MessagingExample.vb: The message class
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Now you need to register a handler to handle arriving messages. This can be done by configuring a message recipient on the server. Let's simply print out the arriving message. Additionally we answer to the client with another message.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IServerConfiguration configuration = Db4oClientServer.NewServerConfiguration();
configuration.Networking.MessageRecipient = <span style="color:Blue;">new</span> ServerMessageReceiver();
IObjectServer server = Db4oClientServer.OpenServer(configuration, DatabaseFile, PortNumber);</pre>
            <div class="codesnippet-meta">MessagingExample.cs: configure a message receiver for the server
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> configuration <span style="color:Blue;">As</span> IServerConfiguration = Db4oClientServer.NewServerConfiguration()
configuration.Networking.MessageRecipient = <span style="color:Blue;">New</span> ServerMessageReceiver()
<span style="color:Blue;">Dim</span> server <span style="color:Blue;">As</span> IObjectServer = Db4oClientServer.OpenServer(configuration, DatabaseFile, PortNumber)</pre>
            <div class="codesnippet-meta">MessagingExample.vb: configure a message receiver for the server
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">class</span> ServerMessageReceiver : IMessageRecipient
{
    <span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">void</span> ProcessMessage(IMessageContext context, <span style="color:Blue;">object</span> message)
    {
        Console.WriteLine(<span style="color:#A31515;">"The server received a '{0}' message"</span>, message);
        <span style="color:Green;">// you can respond to the client</span>
        context.Sender.Send(<span style="color:Blue;">new</span> HelloMessage(<span style="color:#A31515;">"Hi Client!"</span>));
    }
}</pre>
            <div class="codesnippet-meta">MessagingExample.cs: The message receiver for the server
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> ServerMessageReceiver
    <span style="color:Blue;">Implements</span> IMessageRecipient
    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span> ProcessMessage(<span style="color:Blue;">ByVal</span> context <span style="color:Blue;">As</span> IMessageContext, <span style="color:Blue;">ByVal</span> message <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Object</span>) _
        <span style="color:Blue;">Implements</span> IMessageRecipient.ProcessMessage
        Console.WriteLine(<span style="color:#A31515;">"The server received a '{0}' message"</span>, message)
        <span style="color:Green;">' you can respond to the client</span>
        context.Sender.Send(<span style="color:Blue;">New</span> HelloMessage(<span style="color:#A31515;">"Hi Client!"</span>))
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">MessagingExample.vb: The message receiver for the server
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>The same can be done on the client. Register a handler for the received messages. </p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IClientConfiguration configuration = Db4oClientServer.NewClientConfiguration();
configuration.Networking.MessageRecipient = <span style="color:Blue;">new</span> ClientMessageReceiver();</pre>
            <div class="codesnippet-meta">MessagingExample.cs: configure a message receiver for a client
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> configuration <span style="color:Blue;">As</span> IClientConfiguration = Db4oClientServer.NewClientConfiguration()
configuration.Networking.MessageRecipient = <span style="color:Blue;">New</span> ClientMessageReceiver()</pre>
            <div class="codesnippet-meta">MessagingExample.vb: configure a message receiver for a client
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">class</span> ClientMessageReceiver : IMessageRecipient
{
    <span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">void</span> ProcessMessage(IMessageContext context, <span style="color:Blue;">object</span> message)
    {
        Console.WriteLine(<span style="color:#A31515;">"The client received a '{0}' message"</span>,message);
    }
}</pre>
            <div class="codesnippet-meta">MessagingExample.cs: The message receiver for the client
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> ClientMessageReceiver
    <span style="color:Blue;">Implements</span> IMessageRecipient
    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span> ProcessMessage(<span style="color:Blue;">ByVal</span> context <span style="color:Blue;">As</span> IMessageContext, <span style="color:Blue;">ByVal</span> message <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Object</span>) _
        <span style="color:Blue;">Implements</span> IMessageRecipient.ProcessMessage
        Console.WriteLine(<span style="color:#A31515;">"The client received a '{0}' message"</span>, message)
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Sub</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">MessagingExample.vb: The message receiver for the client
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Now on the client we can get a message sender. The message sender allows you to send a message to the server. In this example we send a hello message.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IMessageSender sender = configuration.MessageSender;
<span style="color:Blue;">using</span> (IObjectContainer container = Db4oClientServer.OpenClient(configuration, <span style="color:#A31515;">"localhost"</span>,
                                                                PortNumber, UserAndPassword,
                                                                UserAndPassword))
{
    sender.Send(<span style="color:Blue;">new</span> HelloMessage(<span style="color:#A31515;">"Hi Server!"</span>));
    WaitForAWhile();
}</pre>
            <div class="codesnippet-meta">MessagingExample.cs: Get the message sender and use it
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> sender <span style="color:Blue;">As</span> IMessageSender = configuration.MessageSender
<span style="color:Blue;">Using</span> container <span style="color:Blue;">As</span> IObjectContainer = Db4oClientServer.OpenClient(configuration, _
            <span style="color:#A31515;">"localhost"</span>, PortNumber, UserAndPassword, UserAndPassword)
    sender.Send(<span style="color:Blue;">New</span> HelloMessage(<span style="color:#A31515;">"Hi Server!"</span>))
    WaitForAWhile()
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Using</span></pre>
            <div class="codesnippet-meta">MessagingExample.vb: Get the message sender and use it
			<div class="codedownload"><a href="../CodeExamples/clientserver/messaging/Example-clientserver-messaging-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../Resources/Code/jquery.min.js">
        </script>
        <script src="../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>