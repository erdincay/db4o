<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Querying|SODA Query" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>SODA Sorting</title>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#basics/querying/soda/soda_sorting.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../querying.htm">Querying</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../soda_query.htm">SODA Query</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Sorting by Field</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor19"></a>SODA Sorting</h1>
        <p>You can specify to sort by certain fields in SODA. For this you need to descend to the field and use the appropriate order ascending or order descending method.</p>
        <p>In cases where this is not enough, you can use a special comparator.</p>
        <h2><a name="SortByField"></a> Sorting by Field</h2>
        <p>To sort by a field navigate to the field and call a order ascending or descending method. Note that this only works for fields which have natural sortable values, such as strings and numbers.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IQuery query = container.Query();
query.Constrain(<span style="color:Blue;">typeof</span>(Pilot));
query.Descend(<span style="color:#A31515;">"name"</span>).OrderAscending();

IObjectSet result = query.Execute();</pre>
            <div class="codesnippet-meta">SodaSorting.cs: Order by a field
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> query <span style="color:Blue;">As</span> IQuery = container.Query()
query.Constrain(<span style="color:Blue;">GetType</span>(Pilot))
query.Descend(<span style="color:#A31515;">"name"</span>).OrderAscending()

<span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IObjectSet = query.Execute()</pre>
            <div class="codesnippet-meta">SodaSorting.vb: Order by a field
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="SortByMultipleFields"></a>Sort by Multiple Fields</h2>
        <p>You can sort by multiple fields. Add a order constrain for each field. The first order statement has the highest priority and last added the lowest.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IQuery query = container.Query();
query.Constrain(<span style="color:Blue;">typeof</span>(Pilot));
query.Descend(<span style="color:#A31515;">"age"</span>).OrderAscending();
query.Descend(<span style="color:#A31515;">"name"</span>).OrderAscending();

IObjectSet result = query.Execute();</pre>
            <div class="codesnippet-meta">SodaSorting.cs: Order by multiple fields
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> query <span style="color:Blue;">As</span> IQuery = container.Query()
query.Constrain(<span style="color:Blue;">GetType</span>(Pilot))
query.Descend(<span style="color:#A31515;">"age"</span>).OrderAscending()
query.Descend(<span style="color:#A31515;">"name"</span>).OrderAscending()

<span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IObjectSet = query.Execute()</pre>
            <div class="codesnippet-meta">SodaSorting.vb: Order by multiple fields
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="CostumSorting"></a>Sort With Your Own Comperator</h2>
        <p>In cases where you have more complex sorting requirements, you can specify your own comparator. It is used like a regular <span class="PrimaryPlattform">.NET</span>-comparator. </p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IQuery query = container.Query();
query.Constrain(<span style="color:Blue;">typeof</span>(Pilot));
query.SortBy(<span style="color:Blue;">new</span> NameLengthComperator());

IObjectSet result = query.Execute();</pre>
            <div class="codesnippet-meta">SodaSorting.cs: Order by your comparator
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> query <span style="color:Blue;">As</span> IQuery = container.Query()
query.Constrain(<span style="color:Blue;">GetType</span>(Pilot))
query.SortBy(<span style="color:Blue;">New</span> NameLengthComperator())

<span style="color:Blue;">Dim</span> result <span style="color:Blue;">As</span> IObjectSet = query.Execute()</pre>
            <div class="codesnippet-meta">SodaSorting.vb: Order by your comparator
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">class</span> NameLengthComperator :IQueryComparator
{
    <span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">int</span> Compare(<span style="color:Blue;">object</span> first, <span style="color:Blue;">object</span> second)
    {
        Pilot p1 = (Pilot) first;
        Pilot p2 = (Pilot)second;
        <span style="color:Green;">// sort by string-length</span>
        <span style="color:Blue;">return</span> Math.Sign(p1.Name.Length - p2.Name.Length);
    }
}</pre>
            <div class="codesnippet-meta">SodaSorting.cs: The string length comperator
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Private</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> NameLengthComperator
    <span style="color:Blue;">Implements</span> IQueryComparator
    <span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span> Compare(<span style="color:Blue;">ByVal</span> first <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Object</span>, <span style="color:Blue;">ByVal</span> second <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Object</span>) <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span> _
        <span style="color:Blue;">Implements</span> IQueryComparator.Compare

        <span style="color:Blue;">Dim</span> p1 <span style="color:Blue;">As</span> Pilot = <span style="color:Blue;">DirectCast</span>(first, Pilot)
        <span style="color:Blue;">Dim</span> p2 <span style="color:Blue;">As</span> Pilot = <span style="color:Blue;">DirectCast</span>(second, Pilot)
        <span style="color:Green;">' sort by string-length</span>
        <span style="color:Blue;">Return</span> Math.Sign(p1.Name.Length - p2.Name.Length)
    <span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Function</span>
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">SodaSorting.vb: The string length comperator
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>