<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Transactions and ACID Properties " MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Isolation</title>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#basics/acid_and_transactions/isolation.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../acid_and_transactions.htm">Transactions and ACID Properties </a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Isolation</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor24"></a>Isolation</h1>
        <p>Isolation
imposes rules which ensure that transactions do not interfere with each other
even if they are executed at the same time. Read more about <a href="http://en.wikipedia.org/wiki/Isolation_level" target="_parent">isolation levels on Wikipedia</a>. </p>
        <p>db4o uses the read committed isolation level, on an object level. That's means db4o has a very weak isolation. It ensures that you do not see uncommitted objects of other transactions. However it does not guarantee any consistency across different objects. </p>
        <p>Here's an example to demonstrate the isolation level issues. We have two bank accounts. One transaction lists the two bank accounts and sums up the total. </p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">long</span> moneyInOurAccounts = 0;
<span style="color:Blue;">var</span> bankAccounts = <span style="color:Blue;">from</span> BankAccount b <span style="color:Blue;">in</span> container <span style="color:Blue;">select</span> b;
<span style="color:Blue;">foreach</span> (BankAccount account <span style="color:Blue;">in</span> bankAccounts)
{
    Console.WriteLine(<span style="color:#A31515;">"This account has "</span> + account.Money);
    moneyInOurAccounts += account.Money;
    MoveMoneyTransactionFinishes();
}
<span style="color:Green;">// We get the wrong answer here</span>
Console.WriteLine(<span style="color:#A31515;">"The money total is {0}. Expected is {1}"</span>,
                  moneyInOurAccounts, InitialMoneyOnOneAccount*bankAccounts.Count());</pre>
            <div class="codesnippet-meta">InconsistentStateRead.cs: We list the bank accounts and sum up the money
			<div class="codedownload"><a href="../../CodeExamples/transactions/Example-Code-transactions-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> moneyInOurAccounts <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Long</span> = 0
<span style="color:Blue;">Dim</span> bankAccounts = <span style="color:Blue;">From</span> b <span style="color:Blue;">As</span> BankAccount <span style="color:Blue;">In</span> container <span style="color:Blue;">Select</span> b
<span style="color:Blue;">For</span>  <![CDATA[ ]]><span style="color:Blue;">Each</span> account <span style="color:Blue;">As</span> BankAccount <span style="color:Blue;">In</span> bankAccounts
    Console.WriteLine(<span style="color:#A31515;">"This account has "</span> &amp; account.Money)
    moneyInOurAccounts += account.Money
    MoveMoneyTransactionFinishes()
<span style="color:Blue;">Next</span>
<span style="color:Green;">' We get the wrong answer here</span></pre>
            <div class="codesnippet-meta">InconsistentStateRead.vb: We list the bank accounts and sum up the money
			<div class="codedownload"><a href="../../CodeExamples/transactions/Example-Code-transactions-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>During that operation another transaction finishes a money transfer from one account to another and commits.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">var</span> bankAccounts = <span style="color:Blue;">from</span> BankAccount b <span style="color:Blue;">in</span> container <span style="color:Blue;">select</span> b;
<span style="color:Blue;">var</span> debitAccount = bankAccounts.ElementAt(0);
<span style="color:Blue;">var</span> creditAccount = bankAccounts.ElementAt(1);

<span style="color:Blue;">int</span> moneyToTransfer = 200;
creditAccount.WithDraw(moneyToTransfer);
debitAccount.Deposit(moneyToTransfer);

container.Store(debitAccount);
container.Store(creditAccount);
container.Commit();</pre>
            <div class="codesnippet-meta">InconsistentStateRead.cs: Meanwhile we transfer money.
			<div class="codedownload"><a href="../../CodeExamples/transactions/Example-Code-transactions-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> bankAccounts = <span style="color:Blue;">From</span> b <span style="color:Blue;">As</span> BankAccount <span style="color:Blue;">In</span> container <span style="color:Blue;">Select</span> b
<span style="color:Blue;">Dim</span> debitAccount = bankAccounts.ElementAt(0)
<span style="color:Blue;">Dim</span> creditAccount = bankAccounts.ElementAt(1)

<span style="color:Blue;">Dim</span> moneyToTransfer <span style="color:Blue;">As</span>  <![CDATA[ ]]><span style="color:Blue;">Integer</span> = 200
creditAccount.WithDraw(moneyToTransfer)
debitAccount.Deposit(moneyToTransfer)

container.Store(debitAccount)
container.Store(creditAccount)</pre>
            <div class="codesnippet-meta">InconsistentStateRead.vb: Meanwhile we transfer money.
			<div class="codedownload"><a href="../../CodeExamples/transactions/Example-Code-transactions-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p> Now the other transaction sees one bank account previous transfer, the other account is in the last committed state. Therefore it sees an inconsistent view across these two objects. </p>
        <p>&#160;</p>
        <script src="../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>