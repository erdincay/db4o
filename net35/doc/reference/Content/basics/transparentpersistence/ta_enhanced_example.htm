<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Advanced Features|Enhancement Tools" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Transparent Persistence Enhancement Example</title>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#basics/transparentpersistence/ta_enhanced_example.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../advanced_topics.htm">Advanced Features</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../advanced_topics/enhancement_tools.htm">Enhancement Tools</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Required Depedencies</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor33"></a>Transparent Persistence Enhancement Example</h1>
        <p>You can inject transparent persistence awareness in your persisted classes without modifying their original
			code.
This is done by enhancing the <span MadCap:conditions="Primary..NET">assemblies</span>  at build time.		</p>
        <h2><a name="dependencies"></a>Required
			<span class="PrimaryArtefacts">assemblies</span></h2>
        <p>For transparent activation/persistence you need following dependencies at compile time. (see also the <a href="../../dependency_overview.htm">dependency overview</a>)
		</p>
        <ul MadCap:conditions="Primary..NET">
            <li value="1">The Db4oTool.exe and all its dependencies. </li>
        </ul>
        <h2><a name="Enhance"></a>Enhance Persistent Classes</h2>
        <p>The first step is to enhance the persisted classes. One possibility is to
			introduce an
			<span class="PrimaryAnnotation">Attribute</span> to mark your persisted classes.
</p>
        <p>By the way, their are alternative way to select the enhanced classes. See <a href="../../advanced_topics/enhancement_tools/enhancement_for_.net/db4otool/db4otool_usage.htm" MadCap:conditions="Primary..NET">here</a> <![CDATA[ ]]>.	</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">[AttributeUsage(AttributeTargets.Class, AllowMultiple = <span style="color:Blue;">false</span>, Inherited = <span style="color:Blue;">true</span>)]
<span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">class</span> TransparentPersistedAttribute : Attribute
{
}</pre>
            <div class="codesnippet-meta">TransparentPersistedAttribute.cs: Annotation to mark persisted classes
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve">&lt;AttributeUsage(AttributeTargets.<span style="color:Blue;">Class</span>, AllowMultiple:=<span style="color:Blue;">False</span>, Inherited:=<span style="color:Blue;">True</span>)&gt; _
<span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> TransparentPersistedAttribute
    <span style="color:Blue;">Inherits</span> Attribute
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span></pre>
            <div class="codesnippet-meta">TransparentPersistedAttribute.vb: Annotation to mark persisted classes
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>This
			<span class="PrimaryAnnotation">Attribute</span>is then used to mark all persisted classes.
		</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">[TransparentPersisted]
<span style="color:Blue;">public</span>  <![CDATA[ ]]><span style="color:Blue;">class</span> Person
{</pre>
            <div class="codesnippet-meta">Person.cs: Mark your domain model with the annotations
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve">&lt;TransparentPersisted()&gt; _
<span style="color:Blue;">Public</span>  <![CDATA[ ]]><span style="color:Blue;">Class</span> Person</pre>
            <div class="codesnippet-meta">Person.vb: Mark your domain model with the annotations
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div MadCap:conditions="Primary..NET">
            <h2>Execute Enhancement on Build</h2>
            <p>The next step is to run the enhancement step during the build. This is done by running the
				<a href="../../advanced_topics/enhancement_tools/enhancement_for_.net/db4otool.htm">db4otool</a> during the build:
			</p>
            <p>
                <img src="after-build-events-vs_539x326.png" style="width: 539; height: 326;" />
            </p>
            <p>For C#-projects you find the post build events in the project properties. Right click on the project, choose
				properties. On the project properties dialog choose 'Build Events'. Add the command there.
			</p>
            <p>For VB.NET you find the post build events in the project properties. Right click on the project, choose
				properties. There navigate to the 'Compile'-tab and click the 'Build Events...'-button there.
			</p>
            <p>On the post build event add this command:</p>
            <pre class="prettyprint" xml:space="preserve">$(ProjectDir)\lib\Db4oTool.exe -tp -debug
				-by-attribute:YourNamespace.TransparentPersistedAttribute $(TargetPath)
			</pre>
            <h3>Alternative: MSBuild task</h3>
            <p>As alternative you also can use an MSBuild task:</p>
            <div class="codesnippet" MadCap:conditions="Primary.c#">
                <pre class="prettyprint" xml:space="preserve">&lt;UsingTask AssemblyFile=".\lib\Db4oTool.MSBuild.dll" TaskName="Db4oTool.MSBuild.Db4oEnhancerMSBuildTask" /&gt;
&lt;ItemGroup&gt;
  &lt;Db4oEnhance Include="$(TargetPath)" /&gt;
&lt;/ItemGroup&gt;</pre>
                <div class="codesnippet-meta">simple-enhance-example.csproj: Define a task for the enhancement 
			<div class="codedownload"><a href="../../CodeExamples/enhancement/buildtime/Example-enhancement-buildtime-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
            <p>And the execute the task after the compilation.</p>
            <div class="codesnippet" MadCap:conditions="Primary.c#">
                <pre class="prettyprint" xml:space="preserve">&lt;Target Name="AfterBuild"&gt;
  &lt;Db4oEnhancerMSBuildTask Assemblies="@(Db4oEnhance)" /&gt;
&lt;/Target&gt;</pre>
                <div class="codesnippet-meta">simple-enhance-example.csproj: Define a target which runs the task 
			<div class="codedownload"><a href="../../CodeExamples/enhancement/buildtime/Example-enhancement-buildtime-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
        </div>
        <h2><a name="Check"></a>Check Enhancement</h2>
        <p>You can check if the enhancement worked correctly by checking for the activation interface. Such a check
			should be part of your test-suite to ensure that everything works correctly.
		</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">if</span> (!<span style="color:Blue;">typeof</span> (IActivatable).IsAssignableFrom(<span style="color:Blue;">typeof</span> (Person)))
{
    <span style="color:Blue;">throw</span>  <![CDATA[ ]]><span style="color:Blue;">new</span> InvalidOperationException(<span style="color:Blue;">string</span>.Format(<span style="color:#A31515;">"Expect that the {0} implements {1}"</span>,
                                                      <span style="color:Blue;">typeof</span> (Person), <span style="color:Blue;">typeof</span> (IActivatable)));
}</pre>
            <div class="codesnippet-meta">TransparentPersistence.cs: Check for enhancement
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">If</span>  <![CDATA[ ]]><span style="color:Blue;">Not</span>  <![CDATA[ ]]><span style="color:Blue;">GetType</span>(IActivatable).IsAssignableFrom(<span style="color:Blue;">GetType</span>(Person)) <span style="color:Blue;">Then</span>
    <span style="color:Blue;">Throw</span>  <![CDATA[ ]]><span style="color:Blue;">New</span> InvalidOperationException(<span style="color:Blue;">String</span>.Format(<span style="color:#A31515;">"Expect that the {0} implements {1}"</span>, <span style="color:Blue;">GetType</span>(Person), <span style="color:Blue;">GetType</span>(IActivatable)))
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">If</span></pre>
            <div class="codesnippet-meta">TransparentPersistence.vb: Check for enhancement
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="UsingTP"></a>Using Transparent Activation
		</h2>
        <p>Configure the transparent activation in order to use it.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IEmbeddedConfiguration configuration = Db4oEmbedded.NewConfiguration();
configuration.Common.Add(<span style="color:Blue;">new</span> TransparentActivationSupport());
IObjectContainer container = Db4oEmbedded.OpenFile(configuration, DatabaseFileName);</pre>
            <div class="codesnippet-meta">TransparentPersistence.cs: Add transparent activation
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> configuration <span style="color:Blue;">As</span> IEmbeddedConfiguration = Db4oEmbedded.NewConfiguration()
configuration.Common.Add(<span style="color:Blue;">New</span> TransparentActivationSupport())
<span style="color:Blue;">Dim</span> container <span style="color:Blue;">As</span> IObjectContainer = Db4oEmbedded.OpenFile(configuration, DatabaseFileName)</pre>
            <div class="codesnippet-meta">TransparentPersistence.vb: Add transparent activation
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>After that transparent activation is working properly you can transverse along the object graph and don’t
			have to worry about not activated objects:
		</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">Person person = QueryByName(container, <span style="color:#A31515;">"Joanna the 10"</span>);
Person beginOfDynasty = person.Mother;

<span style="color:Green;">// With transparent activation enabled, you can navigate deeply</span>
<span style="color:Green;">// nested object graphs. db4o will ensure that the objects</span>
<span style="color:Green;">// are loaded from the database.</span>
<span style="color:Blue;">while</span> (<span style="color:Blue;">null</span> != beginOfDynasty.Mother)
{
    beginOfDynasty = beginOfDynasty.Mother;
}
Console.WriteLine(beginOfDynasty.Name);</pre>
            <div class="codesnippet-meta">TransparentPersistence.cs: Activation just works
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> person <span style="color:Blue;">As</span> Person = QueryByName(container, <span style="color:#A31515;">"Joanna the 10"</span>)
<span style="color:Blue;">Dim</span> beginOfDynasty <span style="color:Blue;">As</span> Person = person.Mother

<span style="color:Green;">' With transparent activation enabled, you can navigate deeply</span>
<span style="color:Green;">' nested object graphs. db4o will ensure that the objects</span>
<span style="color:Green;">' are loaded from the database.</span>
<span style="color:Blue;">While</span> beginOfDynasty.Mother <span style="color:Blue;">IsNot</span>  <![CDATA[ ]]><span style="color:Blue;">Nothing</span>
    beginOfDynasty = beginOfDynasty.Mother
<span style="color:Blue;">End</span>  <![CDATA[ ]]><span style="color:Blue;">While</span>
Console.WriteLine(beginOfDynasty.Name)</pre>
            <div class="codesnippet-meta">TransparentPersistence.vb: Activation just works
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2>Using Transparent Persistence</h2>
        <p>Transparent persistence not only manages the activation, but also manages updating the objects. Configure
			transparent persistence in order to use it:
		</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">IEmbeddedConfiguration configuration = Db4oEmbedded.NewConfiguration();
configuration.Common.Add(<span style="color:Blue;">new</span> TransparentPersistenceSupport(<span style="color:Blue;">new</span> DeactivatingRollbackStrategy()));
IObjectContainer container = Db4oEmbedded.OpenFile(configuration, DatabaseFileName);</pre>
            <div class="codesnippet-meta">TransparentPersistence.cs: Add transparent persistence
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> configuration <span style="color:Blue;">As</span> IEmbeddedConfiguration = Db4oEmbedded.NewConfiguration()
configuration.Common.Add(<span style="color:Blue;">New</span> TransparentPersistenceSupport(<span style="color:Blue;">New</span> DeactivatingRollbackStrategy()))
<span style="color:Blue;">Dim</span> container <span style="color:Blue;">As</span> IObjectContainer = Db4oEmbedded.OpenFile(configuration, DatabaseFileName)</pre>
            <div class="codesnippet-meta">TransparentPersistence.vb: Add transparent persistence
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>After that updated objects are automatically stored every time you commit.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve">Person person = QueryByName(container, <span style="color:#A31515;">"Joanna the 10"</span>);
Person mother = person.Mother;
mother.Name = <span style="color:#A31515;">"New Name"</span>;
<span style="color:Green;">// Just commit the transaction. All modified objects are stored</span>
container.Commit();</pre>
            <div class="codesnippet-meta">TransparentPersistence.cs: Just update and commit. Transparent persistence manages all updates
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> person <span style="color:Blue;">As</span> Person = QueryByName(container, <span style="color:#A31515;">"Joanna the 10"</span>)
<span style="color:Blue;">Dim</span> mother <span style="color:Blue;">As</span> Person = person.Mother
mother.Name = <span style="color:#A31515;">"New Name"</span>
<span style="color:Green;">' Just commit the transaction. All modified objects are stored</span>
container.Commit()</pre>
            <div class="codesnippet-meta">TransparentPersistence.vb: Just update and commit. Transparent persistence manages all updates
			<div class="codedownload"><a href="../../CodeExamples/tp/enhancement/Example-tp-enhancement-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>