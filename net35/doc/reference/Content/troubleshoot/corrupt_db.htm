<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Troubleshooting" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Deal With a Corrupt Database</title>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#troubleshoot/corrupt_db.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../trouble_shooting.htm">Troubleshooting</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Investigate a Corrupt Database</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>Deal With a Corrupt Database</h1>
        <p>In general you should do regular <a href="../advanced_topics/backup.htm">backups</a> of your database. db4o tries to do its best to never corrupt the database. However due to bugs or external reasons corruption can occur. Check also your configuration to not use <a href="../basics/acid_and_transactions/dangerous_practises.htm">any risky settings</a>.</p>
        <p>If you have a corrupted database you may think about reporting it: <a href="../community/report_bugs.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Report Bugs"</a></p>
        <p>The fist step is to run the consistency check on your database. If the database is really corrupt you can try  to restore at least some your data.</p>
        <h2>Consistency Check</h2>
        <p MadCap:conditions="Primary..NET">To run consistency checks use the <a href="../advanced_topics/enhancement_tools/enhancement_for_.net/db4otool.htm">Db4oTool</a> with the parameter -check, like this:</p>
        <pre class="prettyprint" xml:space="preserve" MadCap:conditions="Primary..NET">Db4oTool.exe -check databaseFile.db4o</pre>
        <p>This consistency check doesn't check the content of objects. It only checks if the overall structure of the database file is still intact. Also it doesn't offer any repair functionality. It only tells you if the file is corrupted or not.</p>
        <p>When the tool reports inconsistencies you've defiantly have a corrupted database. Then you should fall back to the latest backup or try to recover parts of the database.</p>
        <p>In case the tool doesn't report any issues you maybe still have a corrupted object in your database. In that case you usually can read all intact objects and copy them to a new database.</p>
        <h2>Try to Restore Intact Objects</h2>
        <p>When you cannot read some particular object then you can try to read and copy  the intact objects over to a new database. You can get the id of all objects for a certain type. With these ids you then can load each single object. When loading an object fails then that object is lost. However you still can store the intact objects to another storage.</p>
        <div class="codesnippet" MadCap:conditions="Primary.c#">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">long</span>[] idsOfPersons = container.Ext().StoredClass(<span style="color:Blue;">typeof</span> (Person)).GetIDs();
<span style="color:Blue;">foreach</span> (<span style="color:Blue;">long</span> id <span style="color:Blue;">in</span> idsOfPersons)
{
    <span style="color:Blue;">try</span>
    {
        <span style="color:Blue;">var</span> person = (Person) container.Ext().GetByID(id);
        container.Ext().Activate(person, 1);
        <span style="color:Green;">// store the person to another database</span>
        Console.Out.WriteLine(<span style="color:#A31515;">"This object is ok {0}"</span>, person);
    }
    <span style="color:Blue;">catch</span> (Exception e)
    {
        Console.Out.WriteLine(<span style="color:#A31515;">"We couldn't read the object with the id {0} anymore."</span> +
                              <span style="color:#A31515;">" It is lost"</span>, id);
        Console.Out.WriteLine(e);
    }
}</pre>
            <div class="codesnippet-meta">TryToReadSingleObjects.cs: Try to read the intact objects
			<div class="codedownload"><a href="../CodeExamples/troubleshooting/restore/Example-troubleshooting-restore-csharp.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div class="codesnippet" MadCap:conditions="Primary.VB.NET">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">Dim</span> idsOfPersons <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">Long</span>() = container.Ext().StoredClass(<span style="color:Blue;">GetType</span>(Person)).GetIDs()
<span style="color:Blue;">For</span> <![CDATA[ ]]><span style="color:Blue;">Each</span> id <span style="color:Blue;">As</span> <![CDATA[ ]]><span style="color:Blue;">Long</span> <![CDATA[ ]]><span style="color:Blue;">In</span> idsOfPersons
    <span style="color:Blue;">Try</span>
        <span style="color:Blue;">Dim</span> person = <span style="color:Blue;">DirectCast</span>(container.Ext().GetByID(id), Person)
        container.Ext().Activate(person, 1)
        <span style="color:Green;">' store the person to another database</span>
        Console.Out.WriteLine(<span style="color:#A31515;">"This object is ok {0}"</span>, person)
    <span style="color:Blue;">Catch</span> e <span style="color:Blue;">As</span> Exception
        Console.Out.WriteLine(<span style="color:#A31515;">"We couldn't read the object with the id {0} anymore."</span> &amp; <span style="color:#A31515;">" It is lost"</span>, id)
        Console.Out.WriteLine(e)
    <span style="color:Blue;">End</span> <![CDATA[ ]]><span style="color:Blue;">Try</span>
<span style="color:Blue;">Next</span></pre>
            <div class="codesnippet-meta">TryToReadSingleObjects.vb: Try to read the intact objects
			<div class="codedownload"><a href="../CodeExamples/troubleshooting/restore/Example-troubleshooting-restore-vb.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../Resources/Code/jquery.min.js">
        </script>
        <script src="../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>