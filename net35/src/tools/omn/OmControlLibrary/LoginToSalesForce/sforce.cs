/* This file is part of the db4o object database http://www.db4o.com

Copyright (C) 2004 - 2011  Versant Corporation http://www.versant.com

db4o is free software; you can redistribute it and/or modify it under
the terms of version 3 of the GNU General Public License as published
by the Free Software Foundation.

db4o is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see http://www.gnu.org/licenses/. */
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace sforce
{
	// 
	// This source code was auto-generated by wsdl, Version=2.0.50727.42.
	// 


	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name = "AccountManagementServiceSoap", Namespace = "http://db4o.com/User")]
	public partial class AccountManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback LoginOperationCompleted;

		private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;

		private System.Threading.SendOrPostCallback GetLoginNoticeOperationCompleted;

		private System.Threading.SendOrPostCallback ReserveSeatOperationCompleted;

		private System.Threading.SendOrPostCallback SeatKeepAliveOperationCompleted;

		private System.Threading.SendOrPostCallback ReleaseSeatOperationCompleted;

		private System.Threading.SendOrPostCallback LogoutOperationCompleted;

		/// <remarks/>
		public AccountManagementService()
		{
			this.Url = "https://customer.db4o.com/User.asmx";
		}

		/// <remarks/>
		public event LoginCompletedEventHandler LoginCompleted;

		/// <remarks/>
		public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;

		/// <remarks/>
		public event GetLoginNoticeCompletedEventHandler GetLoginNoticeCompleted;

		/// <remarks/>
		public event ReserveSeatCompletedEventHandler ReserveSeatCompleted;

		/// <remarks/>
		public event SeatKeepAliveCompletedEventHandler SeatKeepAliveCompleted;

		/// <remarks/>
		public event ReleaseSeatCompletedEventHandler ReleaseSeatCompleted;

		/// <remarks/>
		public event LogoutCompletedEventHandler LogoutCompleted;

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/Login", RequestNamespace = "http://db4o.com/User", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string Login(string username, string password)
		{
			object[] results = this.Invoke("Login", new object[] {
                    username,
                    password});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Login", new object[] {
                    username,
                    password}, callback, asyncState);
		}

		/// <remarks/>
		public string EndLogin(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void LoginAsync(string username, string password)
		{
			this.LoginAsync(username, password, null);
		}

		/// <remarks/>
		public void LoginAsync(string username, string password, object userState)
		{
			if ((this.LoginOperationCompleted == null))
			{
				this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
			}
			this.InvokeAsync("Login", new object[] {
                    username,
                    password}, this.LoginOperationCompleted, userState);
		}

		private void OnLoginOperationCompleted(object arg)
		{
			if ((this.LoginCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/GetUserInfo", RequestNamespace = "http://db4o.com/User", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public UserInfo GetUserInfo()
		{
			object[] results = this.Invoke("GetUserInfo", new object[0]);
			return ((UserInfo)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetUserInfo(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetUserInfo", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public UserInfo EndGetUserInfo(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((UserInfo)(results[0]));
		}

		/// <remarks/>
		public void GetUserInfoAsync()
		{
			this.GetUserInfoAsync(null);
		}

		/// <remarks/>
		public void GetUserInfoAsync(object userState)
		{
			if ((this.GetUserInfoOperationCompleted == null))
			{
				this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
			}
			this.InvokeAsync("GetUserInfo", new object[0], this.GetUserInfoOperationCompleted, userState);
		}

		private void OnGetUserInfoOperationCompleted(object arg)
		{
			if ((this.GetUserInfoCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/GetLoginNotice", RequestNamespace = "http://db4o.com/User", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public LoginNotice GetLoginNotice()
		{
			object[] results = this.Invoke("GetLoginNotice", new object[0]);
			return ((LoginNotice)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetLoginNotice(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetLoginNotice", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public LoginNotice EndGetLoginNotice(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((LoginNotice)(results[0]));
		}

		/// <remarks/>
		public void GetLoginNoticeAsync()
		{
			this.GetLoginNoticeAsync(null);
		}

		/// <remarks/>
		public void GetLoginNoticeAsync(object userState)
		{
			if ((this.GetLoginNoticeOperationCompleted == null))
			{
				this.GetLoginNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginNoticeOperationCompleted);
			}
			this.InvokeAsync("GetLoginNotice", new object[0], this.GetLoginNoticeOperationCompleted, userState);
		}

		private void OnGetLoginNoticeOperationCompleted(object arg)
		{
			if ((this.GetLoginNoticeCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetLoginNoticeCompleted(this, new GetLoginNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/ReserveSeat", RequestNamespace = "http://db4o.com/User", ResponseElementName = "AuthenticationTicket", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("AuthenticationTicket")]
		public SeatAuthorization ReserveSeat()
		{
			object[] results = this.Invoke("ReserveSeat", new object[0]);
			return ((SeatAuthorization)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginReserveSeat(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ReserveSeat", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public SeatAuthorization EndReserveSeat(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((SeatAuthorization)(results[0]));
		}

		/// <remarks/>
		public void ReserveSeatAsync()
		{
			this.ReserveSeatAsync(null);
		}

		/// <remarks/>
		public void ReserveSeatAsync(object userState)
		{
			if ((this.ReserveSeatOperationCompleted == null))
			{
				this.ReserveSeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveSeatOperationCompleted);
			}
			this.InvokeAsync("ReserveSeat", new object[0], this.ReserveSeatOperationCompleted, userState);
		}

		private void OnReserveSeatOperationCompleted(object arg)
		{
			if ((this.ReserveSeatCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.ReserveSeatCompleted(this, new ReserveSeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/SeatKeepAlive", RequestNamespace = "http://db4o.com/User", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("AuthenticationTicket")]
		public SeatAuthorization SeatKeepAlive(string sessionID)
		{
			object[] results = this.Invoke("SeatKeepAlive", new object[] {
                    sessionID});
			return ((SeatAuthorization)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginSeatKeepAlive(string sessionID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("SeatKeepAlive", new object[] {
                    sessionID}, callback, asyncState);
		}

		/// <remarks/>
		public SeatAuthorization EndSeatKeepAlive(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((SeatAuthorization)(results[0]));
		}

		/// <remarks/>
		public void SeatKeepAliveAsync(string sessionID)
		{
			this.SeatKeepAliveAsync(sessionID, null);
		}

		/// <remarks/>
		public void SeatKeepAliveAsync(string sessionID, object userState)
		{
			if ((this.SeatKeepAliveOperationCompleted == null))
			{
				this.SeatKeepAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeatKeepAliveOperationCompleted);
			}
			this.InvokeAsync("SeatKeepAlive", new object[] {
                    sessionID}, this.SeatKeepAliveOperationCompleted, userState);
		}

		private void OnSeatKeepAliveOperationCompleted(object arg)
		{
			if ((this.SeatKeepAliveCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.SeatKeepAliveCompleted(this, new SeatKeepAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/ReleaseSeat", RequestNamespace = "http://db4o.com/User", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void ReleaseSeat(string sessionID, string machineName, string machineUsername)
		{
			this.Invoke("ReleaseSeat", new object[] {
                    sessionID,
                    machineName,
                    machineUsername});
		}

		/// <remarks/>
		public System.IAsyncResult BeginReleaseSeat(string sessionID, string machineName, string machineUsername, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ReleaseSeat", new object[] {
                    sessionID,
                    machineName,
                    machineUsername}, callback, asyncState);
		}

		/// <remarks/>
		public void EndReleaseSeat(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void ReleaseSeatAsync(string sessionID, string machineName, string machineUsername)
		{
			this.ReleaseSeatAsync(sessionID, machineName, machineUsername, null);
		}

		/// <remarks/>
		public void ReleaseSeatAsync(string sessionID, string machineName, string machineUsername, object userState)
		{
			if ((this.ReleaseSeatOperationCompleted == null))
			{
				this.ReleaseSeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseSeatOperationCompleted);
			}
			this.InvokeAsync("ReleaseSeat", new object[] {
                    sessionID,
                    machineName,
                    machineUsername}, this.ReleaseSeatOperationCompleted, userState);
		}

		private void OnReleaseSeatOperationCompleted(object arg)
		{
			if ((this.ReleaseSeatCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.ReleaseSeatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://db4o.com/User/Logout", RequestNamespace = "http://db4o.com/User", ResponseNamespace = "http://db4o.com/User", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void Logout(string sessionID)
		{
			this.Invoke("Logout", new object[] {
                    sessionID});
		}

		/// <remarks/>
		public System.IAsyncResult BeginLogout(string sessionID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Logout", new object[] {
                    sessionID}, callback, asyncState);
		}

		/// <remarks/>
		public void EndLogout(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void LogoutAsync(string sessionID)
		{
			this.LogoutAsync(sessionID, null);
		}

		/// <remarks/>
		public void LogoutAsync(string sessionID, object userState)
		{
			if ((this.LogoutOperationCompleted == null))
			{
				this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
			}
			this.InvokeAsync("Logout", new object[] {
                    sessionID}, this.LogoutOperationCompleted, userState);
		}

		private void OnLogoutOperationCompleted(object arg)
		{
			if ((this.LogoutCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://db4o.com/User")]
	public partial class UserInfo
	{

		private string usernameField;

		private string salesforceIDField;

		private string emailField;

		private string firstNameField;

		private string lastNameField;

		private string nameField;

		/// <remarks/>
		public string Username
		{
			get
			{
				return this.usernameField;
			}
			set
			{
				this.usernameField = value;
			}
		}

		/// <remarks/>
		public string SalesforceID
		{
			get
			{
				return this.salesforceIDField;
			}
			set
			{
				this.salesforceIDField = value;
			}
		}

		/// <remarks/>
		public string Email
		{
			get
			{
				return this.emailField;
			}
			set
			{
				this.emailField = value;
			}
		}

		/// <remarks/>
		public string FirstName
		{
			get
			{
				return this.firstNameField;
			}
			set
			{
				this.firstNameField = value;
			}
		}

		/// <remarks/>
		public string LastName
		{
			get
			{
				return this.lastNameField;
			}
			set
			{
				this.lastNameField = value;
			}
		}

		/// <remarks/>
		public string Name
		{
			get
			{
				return this.nameField;
			}
			set
			{
				this.nameField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://db4o.com/User")]
	public partial class FeaturePermission
	{

		private string[] allowField;

		private string[] denyField;

		private string nameField;

		/// <remarks/>
		[System.Xml.Serialization.XmlArrayItemAttribute("add")]
		public string[] Allow
		{
			get
			{
				return this.allowField;
			}
			set
			{
				this.allowField = value;
			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlArrayItemAttribute("remove")]
		public string[] Deny
		{
			get
			{
				return this.denyField;
			}
			set
			{
				this.denyField = value;
			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public string name
		{
			get
			{
				return this.nameField;
			}
			set
			{
				this.nameField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://db4o.com/User")]
	public partial class SeatAuthorization
	{

		private string sessionIDField;

		private FeaturePermission[] featureAuthorizationField;

		private System.DateTime expiresField;

		/// <remarks/>
		public string SessionID
		{
			get
			{
				return this.sessionIDField;
			}
			set
			{
				this.sessionIDField = value;
			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlArrayItemAttribute("Feature")]
		public FeaturePermission[] FeatureAuthorization
		{
			get
			{
				return this.featureAuthorizationField;
			}
			set
			{
				this.featureAuthorizationField = value;
			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public System.DateTime Expires
		{
			get
			{
				return this.expiresField;
			}
			set
			{
				this.expiresField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://db4o.com/User")]
	public partial class LoginNotice
	{

		private string messageField;

		private string uRLField;

		private bool requireNavigationField;

		/// <remarks/>
		public string Message
		{
			get
			{
				return this.messageField;
			}
			set
			{
				this.messageField = value;
			}
		}

		/// <remarks/>
		public string URL
		{
			get
			{
				return this.uRLField;
			}
			set
			{
				this.uRLField = value;
			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public bool requireNavigation
		{
			get
			{
				return this.requireNavigationField;
			}
			set
			{
				this.requireNavigationField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public UserInfo Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((UserInfo)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetLoginNoticeCompletedEventHandler(object sender, GetLoginNoticeCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetLoginNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetLoginNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public LoginNotice Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((LoginNotice)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void ReserveSeatCompletedEventHandler(object sender, ReserveSeatCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ReserveSeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal ReserveSeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SeatAuthorization Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((SeatAuthorization)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void SeatKeepAliveCompletedEventHandler(object sender, SeatKeepAliveCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SeatKeepAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal SeatKeepAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SeatAuthorization Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((SeatAuthorization)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void ReleaseSeatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}